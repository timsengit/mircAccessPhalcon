<?php
/**
 * 公用controller，除了index其他页面不需要登录，切记此controller中的action为非必须登录action
 */
namespace MyApp\Controllers\Admin;

use MyApp\Controllers\Admin\BaseController;
use MyApp\Library\MyPaginator;
use MyApp\Models\Group;
use MyApp\Models\User;

class IndexController extends BaseController
{

    public function initialize()
    {
        echo parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function indexAction()
    {
        //分页查询
        $user           = new User();
        $currentPage    = $this->request->get('pagination', 'int', 1); //当前页
        $pageSize       = 3;
        $offset         = $pageSize * ($currentPage - 1); //偏移量
        $conut          = $user->count(''); //查询总数
        $where["LIMIT"] = [$offset, $pageSize];
        $user           = $user->getUserWithGroupWhere($where);
//        select('*', $where["LIMIT"]);

        $page = new MyPaginator($conut, $pageSize); //新建分页对象
        //echo 1111111111111;die;
        $this->view->setVar('user', $user);
        $this->view->setVar('page', $page->showpage());

    }
    public function loginAction()
    {
        //如果是因为权限不足退至登录页面，则获取返回的权限错误
        $this->view->permissionMsg = $this->dispatcher->getParam("message");

        if ($this->request->isPost()) {
            $adminName = $this->request->getPost('adminName', 'string');
            $adminPwd  = $this->request->getPost('adminPwd', 'string');

            if (empty($adminName)) {
                $this->view->accountMsg = '请输入用户名！';
            } elseif (empty($adminPwd)) {
                $this->view->passwordMsg = '请填写登录密码！';
            } else {
                ////这里执行数据库验证
                $user = new User();

                $check = $user->checkUser($adminName, $adminPwd);
                if ($check === null) {
                    $this->view->accountMsg = '用户不存在！';
                } elseif (isset($check['isAdmin']) && !$check['isAdmin'] == true) {
                    $this->view->accountMsg = '密码错误，请重新输入！';
                } else {
                    // var_dump($check['info']);
                    //echo 6555;die;

                    ///获取权限
                    $super = parent::isSuper($check['info']['groupId']);
                    // var_dump($super);
                    //die;
                    // $add = parent::hasAdd($check['info']['groupId']);
                    //var_dump($super);die;
                    //注册seeion 存储用户名 权限
                    $this->session->set("adminName", $check['info']['name']);
                    $this->session->set("groupId", $check['info']['groupId']);
                    $this->session->set("super", $super);

                    //var_dump($this->session->get("adminName"));die;

                    // 将流转发到当前控制器的另一个动作
                    // 传递参数
                    //                    $this->dispatcher->forward(array(
                    //                        "controller" => "index",
                    //                        "action"     => "list",
                    //                        //"params"     => array('year' => 111111111, '11' => 11111),
                    //                    ));
                    //$this->view->redirect('admin/index/list');
                    //$this->listAction();
                    $this->response->redirect("/admin/index/index");

                }
            }
        }
    }

    public function listAction()
    {

        //echo $this->dispatcher->getParam("11");die;
        // $query = (new User())->getUserWithGroup();
        //echo 1111111111111111;
        //var_dump($query);die;
        $users = (new User())->getUserWithGroup();
        $this->view->setVar('users', $users);
    }
    public function addAction()
    {
        $group = (new Group())->getGroups();
        // var_dump($group);die;
        $this->view->setVar('group', $group);

    }
    //保存添加用户
    public function saveAction()
    {
        $request = $this->request;
        $name    = $request->getPost('name');
        $pwd     = $request->getPost('pwd');
        $sex     = $request->getPost('sex');
        $mobile  = $request->getPost('mobile');
        $group   = $request->getPost('group');
        $user    = new User();
        $this->db->insert('user',
            ['name'   => $name,
                'pwd'     => $pwd,
                'sex'     => $sex,
                'addTime' => time(),
                'phone'   => $mobile,
                'groupId' => $group,
            ]);
        //$users = (new User())->getUser();
        // $this->view->setVar('users', $users);
        //$this->view->pick('index/list');
        // 将流转发到当前控制器的另一个动作
        // 传递参数
        //        $this->dispatcher->forward(array(
        //            "controller" => "index",
        //            "action"     => "list",
        //            //"params"     => array('year' => 111111111, '11' => 11111),
        //        ));
        $this->response->redirect("/admin/index/list");
    }
    //保存编辑用户
    public function saveChangeAction()
    {
        $request = $this->request;
        $id      = $request->getPost('id');
        $name    = $request->getPost('name');
        $pwd     = $request->getPost('pwd');
        $sex     = $request->getPost('sex');
        $mobile  = $request->getPost('mobile');
        $group   = $request->getPost('group');
        $user    = new User();
        $user->update(['name' => $name,
            'pwd'                 => $pwd,
            'sex'                 => $sex,
            'addTime'             => time(),
            'phone'               => $mobile,
            'groupId'             => $group,
        ], ['id' => $id]);
        //$users = (new User())->getUser();
        // $this->view->setVar('users', $users);
        //$this->view->pick('index/list');
        // 将流转发到当前控制器的另一个动作
        // 传递参数
        //        $this->dispatcher->forward(array(
        //            "controller" => "index",
        //            "action"     => "list",
        //            //"params"     => array('year' => 111111111, '11' => 11111),
        //        ));
        $this->response->redirect("/admin/index/list");
    }
    public function editAction()
    {
        $request = $this->request;
        $id      = $request->get('id');
        $user    = new User();
        $userone = $user->select('*', ['id' => $id]);
        $this->view->setVar('user', $userone);
        $group = (new Group())->getGroups();
        // var_dump($group);die;
        $this->view->setVar('group', $group);

    }
    public function logoutAction()
    {
        $this->session->destroy();
        //echo 11111111111111111;die;
        $this->dispatcher->forward(array(
            "controller" => "index",
            "action"     => "login",
            //"params"     => array('year' => 111111111, '11' => 11111),
        ));

    }

}
